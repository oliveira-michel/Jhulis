//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jhulis.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class RuleSet {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RuleSet() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Jhulis.Core.Resources.RuleSet", typeof(RuleSet).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deve ser definida uma URL base válida..
        /// </summary>
        public static string BaseUrl_Description {
            get {
                return ResourceManager.GetString("BaseUrl.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to O conjunto de atributos &apos;host&apos;, &apos;basePath&apos; e &apos;schemes&apos; devem ser definidos de forma a juntos formarem uma URL válida. Ex: schemes = &apos;https&apos;, host = &apos;api.suaempresa.com.br&apos; e basePath = &apos;/clientes/cadastros&apos; formando &apos;https://api.suaempresa.com.br/clientes/cadastros&apos;..
        /// </summary>
        public static string BaseUrl_Details {
            get {
                return ResourceManager.GetString("BaseUrl.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BaseUrl.
        /// </summary>
        public static string BaseUrl_Name {
            get {
                return ResourceManager.GetString("BaseUrl.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As propriedades da resposta devem estar contidas em uma propriedade (envelope) &apos;{0}&apos;..
        /// </summary>
        public static string ContentEnvelope_Description {
            get {
                return ResourceManager.GetString("ContentEnvelope.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retornar as propriedades da resposta em um &quot;envelope&quot; permite separar suas propriedades de outras que não representam o objeto principal, como paginação, mensagens, etc. Sendo que estas outras propriedades com características de metadados também devem ter seu próprio &quot;envelope&quot;..
        /// </summary>
        public static string ContentEnvelope_Details {
            get {
                return ResourceManager.GetString("ContentEnvelope.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContentEnvelope.
        /// </summary>
        public static string ContentEnvelope_Name {
            get {
                return ResourceManager.GetString("ContentEnvelope.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Respostas HTTP 204 não devem retornar nenhum conteúdo..
        /// </summary>
        public static string ContentIn204_Description {
            get {
                return ResourceManager.GetString("ContentIn204.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to O Content-Lenght de uma requisição HTTP com retorno 204 deve ser 0..
        /// </summary>
        public static string ContentIn204_Details {
            get {
                return ResourceManager.GetString("ContentIn204.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContentIn204.
        /// </summary>
        public static string ContentIn204_Name {
            get {
                return ResourceManager.GetString("ContentIn204.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Atributos ou parâmetros que representem datas devem ter o campo format definidos como date ou date-time..
        /// </summary>
        public static string DateWithoutFormat_Description {
            get {
                return ResourceManager.GetString("DateWithoutFormat.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifique se o atributo ou parâmetro é realmente uma data e se for, defina o format..
        /// </summary>
        public static string DateWithoutFormat_Details {
            get {
                return ResourceManager.GetString("DateWithoutFormat.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateWithoutFormat.
        /// </summary>
        public static string DateWithoutFormat_Name {
            get {
                return ResourceManager.GetString("DateWithoutFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As diferentes partes do contrato devem ter suas descrições preenchidas de forma a explicar o negócio sendo exposto para o cliente..
        /// </summary>
        public static string Description_Description {
            get {
                return ResourceManager.GetString("Description.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quanto melhor os itens forem descritos, mais fácil será para o entendimento do consumidor da API. Evite descrições vazias ou muito curtas..
        /// </summary>
        public static string Description_Details {
            get {
                return ResourceManager.GetString("Description.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string Description_Name {
            get {
                return ResourceManager.GetString("Description.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Descrição deve respeitar respeitar regras de pontuação, acentuação e uso de maiúsculas e minúsculas..
        /// </summary>
        public static string DescriptionQuality_Description {
            get {
                return ResourceManager.GetString("DescriptionQuality.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inicie as descrições dos campos &apos;description&apos; ou &apos;summary&apos; com letra maiúscula e finalize com um ponto final..
        /// </summary>
        public static string DescriptionQuality_Details {
            get {
                return ResourceManager.GetString("DescriptionQuality.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DescriptionQuality.
        /// </summary>
        public static string DescriptionQuality_Name {
            get {
                return ResourceManager.GetString("DescriptionQuality.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cada segmento da URL deve ter apenas uma barra &apos;/&apos;..
        /// </summary>
        public static string DoubleSlashes_Description {
            get {
                return ResourceManager.GetString("DoubleSlashes.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Não termine um path com &apos;/&apos;, nem coloque duas barras seguidas &apos;//&apos;..
        /// </summary>
        public static string DoubleSlashes_Details {
            get {
                return ResourceManager.GetString("DoubleSlashes.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DoubleSlashes.
        /// </summary>
        public static string DoubleSlashes_Name {
            get {
                return ResourceManager.GetString("DoubleSlashes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Respostas HTTP 200 ou 206 devem retornar alguma propriedade no body..
        /// </summary>
        public static string Empty200_Description {
            get {
                return ResourceManager.GetString("Empty200.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mesmo que o resultado da resposta seja consequência de filtros que não retornem resultado, retorne a propriedade de envelope com valor nulo ou array vazio..
        /// </summary>
        public static string Empty200_Details {
            get {
                return ResourceManager.GetString("Empty200.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty200.
        /// </summary>
        public static string Empty200_Name {
            get {
                return ResourceManager.GetString("Empty200.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adicione exemplo às suas respostas..
        /// </summary>
        public static string EmptyExamples_Description {
            get {
                return ResourceManager.GetString("EmptyExamples.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exemplos ajudam o usuário a entender como funciona a API..
        /// </summary>
        public static string EmptyExamples_Details {
            get {
                return ResourceManager.GetString("EmptyExamples.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EmptyExamples.
        /// </summary>
        public static string EmptyExamples_Name {
            get {
                return ResourceManager.GetString("EmptyExamples.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quando a resposta é de erro (4xx ou 5xx) as propriedades da resposta devem seguir o padrão..
        /// </summary>
        public static string ErrorResponseFormat_Description {
            get {
                return ResourceManager.GetString("ErrorResponseFormat.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As propriedades da resposta devem devem estar dentre estas: {0}. .
        /// </summary>
        public static string ErrorResponseFormat_Details {
            get {
                return ResourceManager.GetString("ErrorResponseFormat.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ErrorResponseFormat.
        /// </summary>
        public static string ErrorResponseFormat_Name {
            get {
                return ResourceManager.GetString("ErrorResponseFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adicione um Health Check na sua API..
        /// </summary>
        public static string HealthCheck_Description {
            get {
                return ResourceManager.GetString("HealthCheck.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A utilização de um endpoint de Health Check é uma boa prática para permitir que o cliente ou sistemas de monitoramento verifiquem a disponibilidade da sua API..
        /// </summary>
        public static string HealthCheck_Details {
            get {
                return ResourceManager.GetString("HealthCheck.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HealthCheck.
        /// </summary>
        public static string HealthCheck_Name {
            get {
                return ResourceManager.GetString("HealthCheck.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Respostas do tipo HTTP 200 que representem coleções podem ser paginadas..
        /// </summary>
        public static string Http200WithoutPagination_Description {
            get {
                return ResourceManager.GetString("Http200WithoutPagination.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oferecer paginação para o cliente, dá flexibilidade para ele trabalhar com um payload do tamanho que for melhor para ele..
        /// </summary>
        public static string Http200WithoutPagination_Details {
            get {
                return ResourceManager.GetString("Http200WithoutPagination.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Http200WithoutPagination.
        /// </summary>
        public static string Http200WithoutPagination_Name {
            get {
                return ResourceManager.GetString("Http200WithoutPagination.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resposta do tipo HTTP 201 deve ter um Header Location.
        /// </summary>
        public static string Http201WithoutLocationHeader_Description {
            get {
                return ResourceManager.GetString("Http201WithoutLocationHeader.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Este tipo de resposta representa criação de dados e precisa indicar a URL que representa o recurso recém criado..
        /// </summary>
        public static string Http201WithoutLocationHeader_Details {
            get {
                return ResourceManager.GetString("Http201WithoutLocationHeader.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Http201WithoutLocationHeader.
        /// </summary>
        public static string Http201WithoutLocationHeader_Name {
            get {
                return ResourceManager.GetString("Http201WithoutLocationHeader.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Respostas do tipo HTTP 300, 301, 302, 303 e 307 devem ter um Header Location..
        /// </summary>
        public static string Http3xxWithoutLocationHeader_Description {
            get {
                return ResourceManager.GetString("Http3xxWithoutLocationHeader.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Estes tipos de respostas representam redirecionamentos e precisam indicar o local do redirecionamento no header Location..
        /// </summary>
        public static string Http3xxWithoutLocationHeader_Details {
            get {
                return ResourceManager.GetString("Http3xxWithoutLocationHeader.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Http3xxWithoutLocationHeader.
        /// </summary>
        public static string Http3xxWithoutLocationHeader_Name {
            get {
                return ResourceManager.GetString("Http3xxWithoutLocationHeader.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to O recurso deve deve ter um identificador e ele deve se chamar apenas &apos;{0}&apos;..
        /// </summary>
        public static string IdPropertyResponse_Description {
            get {
                return ResourceManager.GetString("IdPropertyResponse.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normalmente, a API REST expões recursos e recursos têm um ID que o identifica e diferencia entre eles. O tipo do recurso é identificado pelo nome da sua URL e um id deve ser representado por &apos;{0}&apos;..
        /// </summary>
        public static string IdPropertyResponse_Details {
            get {
                return ResourceManager.GetString("IdPropertyResponse.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IdPropertyResponse.
        /// </summary>
        public static string IdPropertyResponse_Name {
            get {
                return ResourceManager.GetString("IdPropertyResponse.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preencha as informações de contato..
        /// </summary>
        public static string InfoContact_Description {
            get {
                return ResourceManager.GetString("InfoContact.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string InfoContact_Details {
            get {
                return ResourceManager.GetString("InfoContact.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InfoContact.
        /// </summary>
        public static string InfoContact_Name {
            get {
                return ResourceManager.GetString("InfoContact.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As propriedades dentro do envelope {0} devem serguir o padrão..
        /// </summary>
        public static string MessagesEnvelopeFormat_Description {
            get {
                return ResourceManager.GetString("MessagesEnvelopeFormat.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As propriedades dentro do envelope {0} devem estar dentre estas: {1}..
        /// </summary>
        public static string MessagesEnvelopeFormat_Details {
            get {
                return ResourceManager.GetString("MessagesEnvelopeFormat.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MessagesEnvelopeFormat.
        /// </summary>
        public static string MessagesEnvelopeFormat_Name {
            get {
                return ResourceManager.GetString("MessagesEnvelopeFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tipos de retorno com muitos objetos aninhados podem estar apontando um problema de referência cíclica..
        /// </summary>
        public static string NestingDepth_Description {
            get {
                return ResourceManager.GetString("NestingDepth.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A validação das regras verificará objetos de no máximo {0} de profundidade de aninhamento. Evite objetos com muitos aninhamentos e verifique se não há referência cíclica nesta propriedade..
        /// </summary>
        public static string NestingDepth_Details {
            get {
                return ResourceManager.GetString("NestingDepth.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NestingDepth.
        /// </summary>
        public static string NestingDepth_Name {
            get {
                return ResourceManager.GetString("NestingDepth.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uma operação deve ter pelo menos uma resposta de sucesso (2xx)..
        /// </summary>
        public static string OperationSuccessResponse_Description {
            get {
                return ResourceManager.GetString("OperationSuccessResponse.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifique se você não esqueceu de colocar uma resposta de sucesso..
        /// </summary>
        public static string OperationSuccessResponse_Details {
            get {
                return ResourceManager.GetString("OperationSuccessResponse.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OperationSuccessResponse.
        /// </summary>
        public static string OperationSuccessResponse_Name {
            get {
                return ResourceManager.GetString("OperationSuccessResponse.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As propriedades dentro do envelope {0} devem serguir o padrão..
        /// </summary>
        public static string PaginationEnvelopeFormat_Description {
            get {
                return ResourceManager.GetString("PaginationEnvelopeFormat.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As propriedades dentro do envelope {0} devem estar dentre estas: {1}..
        /// </summary>
        public static string PaginationEnvelopeFormat_Details {
            get {
                return ResourceManager.GetString("PaginationEnvelopeFormat.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PaginationEnvelopeFormat.
        /// </summary>
        public static string PaginationEnvelopeFormat_Name {
            get {
                return ResourceManager.GetString("PaginationEnvelopeFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nos Paths, utilizar estrutura &apos;/colecao/{idColecao}/subcolecao/{idSubColecao}&apos;..
        /// </summary>
        public static string PathAndIDStructure_Description {
            get {
                return ResourceManager.GetString("PathAndIDStructure.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As melhores práticas orientam que organizemos os paths como coleções de entidades. Estas coleções ser relacionam entre si através da organização delas no path. Não devemos criar segmentos de path que não sejam entidades ou serviços da API, ou seja, segmentos apenas para agrupamento. A função de agrupamento se dá apenas no &quot;basePath&quot;..
        /// </summary>
        public static string PathAndIDStructure_Details {
            get {
                return ResourceManager.GetString("PathAndIDStructure.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PathAndIDStructure.
        /// </summary>
        public static string PathAndIDStructure_Name {
            get {
                return ResourceManager.GetString("PathAndIDStructure.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nos Paths, utilizar notação {0}. Ex: {1}..
        /// </summary>
        public static string PathCase_Description {
            get {
                return ResourceManager.GetString("PathCase.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string PathCase_Details {
            get {
                return ResourceManager.GetString("PathCase.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PathCase.
        /// </summary>
        public static string PathCase_Name {
            get {
                return ResourceManager.GetString("PathCase.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to O Path Parameter deve ser identificado como {0} em {1}. Ex: {2}..
        /// </summary>
        public static string PathParameter_Description {
            get {
                return ResourceManager.GetString("PathParameter.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cada Path Parameter deve ter um id único na URL e seguir uma nomenclatura que o relacione com o nome do path que ele representa..
        /// </summary>
        public static string PathParameter_Details {
            get {
                return ResourceManager.GetString("PathParameter.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PathParameter.
        /// </summary>
        public static string PathParameter_Name {
            get {
                return ResourceManager.GetString("PathParameter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to O Path na maioria das vezes deve ser um substantivo no plural. Ex: clientes..
        /// </summary>
        public static string PathPlural_Description {
            get {
                return ResourceManager.GetString("PathPlural.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Em alguns cenários menos frequentes, o nome do path pode não seguir a regra do substantivo e/ou representar um serviço (verbo), neste caso, utilize o arquivo de configuração para não processar esta regra..
        /// </summary>
        public static string PathPlural_Details {
            get {
                return ResourceManager.GetString("PathPlural.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PathPlural.
        /// </summary>
        public static string PathPlural_Name {
            get {
                return ResourceManager.GetString("PathPlural.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Não colocar &apos;/&apos; no final dos paths..
        /// </summary>
        public static string PathTrailingSlash_Description {
            get {
                return ResourceManager.GetString("PathTrailingSlash.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alguns sistemas ignoram-nas, no entanto, outros podem ter problemas no roteamento das chamadas com URLs terminadas em &apos;/&apos;..
        /// </summary>
        public static string PathTrailingSlash_Details {
            get {
                return ResourceManager.GetString("PathTrailingSlash.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PathTrailingSlash.
        /// </summary>
        public static string PathTrailingSlash_Name {
            get {
                return ResourceManager.GetString("PathTrailingSlash.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paths não devem conter nomes representando ações de CRUD..
        /// </summary>
        public static string PathWithCrudNames_Description {
            get {
                return ResourceManager.GetString("PathWithCrudNames.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As ações são representadas pelos verbos HTTP e os paths devem representar apenas os nomes das entidades e/ou serviços..
        /// </summary>
        public static string PathWithCrudNames_Details {
            get {
                return ResourceManager.GetString("PathWithCrudNames.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PathWithCrudNames.
        /// </summary>
        public static string PathWithCrudNames_Name {
            get {
                return ResourceManager.GetString("PathWithCrudNames.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nas propriedades, utilizar notação {0}. Ex: {1}..
        /// </summary>
        public static string PropertyCase_Description {
            get {
                return ResourceManager.GetString("PropertyCase.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string PropertyCase_Details {
            get {
                return ResourceManager.GetString("PropertyCase.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PropertyCase.
        /// </summary>
        public static string PropertyCase_Name {
            get {
                return ResourceManager.GetString("PropertyCase.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As propriedades dentro de uma URL não precisam repetir o nome da URL..
        /// </summary>
        public static string PropertyNamingMatchingPath_Description {
            get {
                return ResourceManager.GetString("PropertyNamingMatchingPath.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Por exemplo, em uma URL /clientes, as propriedades podem ser apenas nome, endereco, idade. Evite nomeá-las repetindo o nome do path (nomeCliente, enderecoCliente, idadeCliente, etc)..
        /// </summary>
        public static string PropertyNamingMatchingPath_Details {
            get {
                return ResourceManager.GetString("PropertyNamingMatchingPath.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PropertyNamingMatchingPath.
        /// </summary>
        public static string PropertyNamingMatchingPath_Name {
            get {
                return ResourceManager.GetString("PropertyNamingMatchingPath.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As propriedades não devem ter seus nomes iniciando com tipo delas..
        /// </summary>
        public static string PropertyStartingWithType_Description {
            get {
                return ResourceManager.GetString("PropertyStartingWithType.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Não use notação húngara. Por exemplo, idade deve se chamar &quot;idade&quot;, não intIdade. O tipo da propriedade pode ser melhor documentado na descrição e através dos exemplos..
        /// </summary>
        public static string PropertyStartingWithType_Details {
            get {
                return ResourceManager.GetString("PropertyStartingWithType.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PropertyStartingWithType.
        /// </summary>
        public static string PropertyStartingWithType_Name {
            get {
                return ResourceManager.GetString("PropertyStartingWithType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A API deve conter ao menos uma resposta de erro 4xx e uma resposta 500..
        /// </summary>
        public static string ResponseWithout4xxAnd500_Description {
            get {
                return ResourceManager.GetString("ResponseWithout4xxAnd500.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifique se há pelo menos uma resposta de erro 4xx tratando o request e uma resposta 500 para problemas no servidor..
        /// </summary>
        public static string ResponseWithout4xxAnd500_Details {
            get {
                return ResourceManager.GetString("ResponseWithout4xxAnd500.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResponseWithout4xxAnd500.
        /// </summary>
        public static string ResponseWithout4xxAnd500_Name {
            get {
                return ResourceManager.GetString("ResponseWithout4xxAnd500.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Atributos ou parâmetros que representem números ou valores financeiros devem ser tipados como number..
        /// </summary>
        public static string StringCouldBeNumber_Description {
            get {
                return ResourceManager.GetString("StringCouldBeNumber.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifique se o atributo ou parâmetro pode ser representado como number..
        /// </summary>
        public static string StringCouldBeNumber_Details {
            get {
                return ResourceManager.GetString("StringCouldBeNumber.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StringCouldBeNumber.
        /// </summary>
        public static string StringCouldBeNumber_Name {
            get {
                return ResourceManager.GetString("StringCouldBeNumber.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A API deve utilizar códigos de resposta HTTP válidos..
        /// </summary>
        public static string ValidResponseCodes_Description {
            get {
                return ResourceManager.GetString("ValidResponseCodes.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Utilize apenas um destes códigos HTTP: {0}..
        /// </summary>
        public static string ValidResponseCodes_Details {
            get {
                return ResourceManager.GetString("ValidResponseCodes.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ValidResponseCodes.
        /// </summary>
        public static string ValidResponseCodes_Name {
            get {
                return ResourceManager.GetString("ValidResponseCodes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A versão da API deve respeitar o formato {0}. Ex: {1}..
        /// </summary>
        public static string VersionFormat_Description {
            get {
                return ResourceManager.GetString("VersionFormat.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regex do formato: {0}..
        /// </summary>
        public static string VersionFormat_Details {
            get {
                return ResourceManager.GetString("VersionFormat.Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VersionFormat.
        /// </summary>
        public static string VersionFormat_Name {
            get {
                return ResourceManager.GetString("VersionFormat.Name", resourceCulture);
            }
        }
    }
}
